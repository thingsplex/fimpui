#!/bin/bash

set -e

# summary of how this script can be called:
#		* <postinst> `configure' <most-recently-configured-version>
#		* <old-postinst> `abort-upgrade' <new version>
#		* <conflictor's-postinst> `abort-remove' `in-favour' <package>
#		  <new-version>
#		* <postinst> `abort-remove'
#		* <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#		  <failed-install-package> <version> `removing'
#		  <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

add_user_and_group()
{
	if ! getent group fimp >/dev/null
	then
		echo -n "Adding group fimp.."
		addgroup --quiet \
			--system \
			fimp 2>/dev/null || true
		echo "..done"
	fi

    if ! getent group futurehome >/dev/null
	then
		echo -n "Adding group futurehome.."
		addgroup --quiet \
			--system \
			futurehome 2>/dev/null || true
		echo "..done"
	fi

	if ! getent passwd fimp >/dev/null
	then
		echo -n "Adding user fimp.."
		adduser --quiet \
			--system \
			--ingroup fimp \
			--no-create-home \
			--disabled-password \
			fimp 2>/dev/null || true
		echo "..done"
	fi

    adduser --quiet fimp futurehome

}

set_ownership()
{
	chown -R fimp:fimp "/opt/thingsplex"
}


case "$1" in
	configure)
		add_user_and_group
		set_ownership

		# Start thingsplex
		if [ -f /opt/thingsplex/thingsplex ]
		then
		    systemctl enable thingsplex.service
			systemctl start thingsplex.service
		fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

chmod 777 -R /var/lib/futurehome/zwave-ad/products/

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0